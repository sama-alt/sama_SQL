You did such a great job helping Julia with her last coding contest challenge that she wants you to work on this one, too!

The total score of a hacker is the sum of their maximum scores for all of the challenges. Write a query to print the hacker_id, name, and total score of the hackers ordered by the descending score. If more than one hacker achieved the same total score, then sort the result by ascending hacker_id. Exclude all hackers with a total score of  from your result.

Input Format

The following tables contain contest data:

Hackers: The hacker_id is the id of the hacker, and name is the name of the hacker.

Submissions: The submission_id is the id of the submission, hacker_id is the id of the hacker who made the submission, challenge_id is the id of the challenge for which the submission belongs to, and score is the score of the submission.

Sample Input

Hackers Table:

Submissions Table:

Sample Output

4071 Rose 191
74842 Lisa 174
84072 Bonnie 100
4806 Angela 89
26071 Frank 85
80305 Kimberly 67
49438 Patrick 43
Explanation

Hacker 4071 submitted solutions for challenges 19797 and 49593, so the total score .

Hacker 74842 submitted solutions for challenges 19797 and 63132, so the total score 

Hacker 84072 submitted solutions for challenges 49593 and 63132, so the total score .

The total scores for hackers 4806, 26071, 80305, and 49438 can be similarly calculated.

/*
Enter your query here.
*/
SELECT r.hacker_id, h.name, SUM(r.max_score)
FROM (
    SELECT s.hacker_id, s.challenge_id, MAX(s.score) AS max_score
    FROM Submissions s
    GROUP BY s.hacker_id, s.challenge_id
) AS r JOIN Hackers h on r.hacker_id = h.hacker_id
GROUP BY r.hacker_id, h.name
HAVING SUM(r.max_score) > 0
ORDER BY SUM(r.max_score) DESC, r.hacker_id ASC;
1
/*
2
Enter your query here.
3
*/
4
SELECT r.hacker_id, h.name, SUM(r.max_score)
5
FROM (
6
    SELECT s.hacker_id, s.challenge_id, MAX(s.score) AS max_score
7
    FROM Submissions s
8
    GROUP BY s.hacker_id, s.challenge_id
9
) AS r JOIN Hackers h on r.hacker_id = h.hacker_id
10
GROUP BY r.hacker_id, h.name
11
HAVING SUM(r.max_score) > 0
12
ORDER BY SUM(r.max_score) DESC, r.hacker_id ASC;
Line: 12 Col: 49
Run Code Submit CodeUpload Code as File
Sql
You have earned 30.00 points!
49/58 challenges solved.
84%
Congratulations
You solved this challenge. Would you like to challenge your friends?Share on FacebookShare on TwitterShare on LinkedIn

Test case 0
Compiler Message
Success
Input (stdin)
INPUT
Expected Output
76971 Ashley 760 
84200 Susan 710 
76615 Ryan 700 
82382 Sara 640 
79034 Marilyn 580 
78552 Harry 570 
74064 Helen 540 
78688 Sean 540 
83832 Jason 540 
72796 Jose 510 
76216 Carlos 510 
90304 Lillian 500 
88507 Patrick 490 
72505 Keith 480 
88018 Dennis 480 
78918 Julia 470 
85319 Shawn 470 
71357 Bobby 460 
72047 Elizabeth 460 
74147 Jason 460 
{-truncated-}
BlogScoringEnvironmentFAQAbout UsSupportCareersTerms Of ServicePrivacy Policy
Could not connect to the reCAPTCHA serv



Answer :

SELECT r.hacker_id, h.name, SUM(r.max_score)
FROM (
    SELECT s.hacker_id, s.challenge_id, MAX(s.score) AS max_score
    FROM Submissions s
    GROUP BY s.hacker_id, s.challenge_id
) AS r JOIN Hackers h on r.hacker_id = h.hacker_id
GROUP BY r.hacker_id, h.name
HAVING SUM(r.max_score) > 0
ORDER BY SUM(r.max_score) DESC, r.hacker_id ASC;
